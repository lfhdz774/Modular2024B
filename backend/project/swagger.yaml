swagger: '2.0'
info:
  title: Server Portal API documentation
  version: '1.0'
paths:
  /signup:
    post:
      tags:
          - Signup
      summary: Create a new user
      description: Endpoint to create a new user.
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: body
          in: body
          description: User information
          required: true
          schema:
            $ref: '#/definitions/UserCreateModel'
      responses:
        200:
          description: User created successfully
        400:
          description: Bad request
        500:
          description: Internal server error
  /login:
     post:
      tags:
        - Login
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserLoginModel'
      responses:
        200:
            description: Successful login
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: Access token for authentication
        401:
            description: Unauthorized
            schema:
              type: object
              properties:
                msg:
                  type: string
                  description: Error message
  /user:
    get:
      tags:
          - Users
      summary: Get user by username
      parameters:
        - name: username
          in: query
          description: Username of the user
          required: true
          type: string
      responses:
        '200':
          description: Successful operation
          schema:
            $ref: '#/definitions/UserModel'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
    put:
      tags:
        - Users
      summary: Update user by username
      parameters:
        - name: username
          in: query
          description: Username of the user
          required: true
          type: string
        - name: updates
          in: body
          description: JSON object with the fields to update
          required: true
          schema:
            $ref: '#/definitions/UserUpdateModel'
      responses:
        '200':
          description: User updated successfully
          schema:
            $ref: '#/definitions/SuccessResponse'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'
    delete:
      tags:
        - Users
      summary: Delete user by username
      parameters:
        - name: username
          in: query
          description: Username of the user
          required: true
          type: string
      responses:
        '200':
          description: User deleted successfully
          schema:
            $ref: '#/definitions/SuccessResponse'
        '404':
          description: User not found
          schema:
            $ref: '#/definitions/ErrorResponse'

definitions:
    UserCreateModel:
      type: object
      required:
        - username
        - password
        - email
        - first_name
        - last_name
        - employee_code
        - role
      properties:
        username:
          type: string
          description: Username of the user
        password:
          type: string
          description: Password of the user
        email:
          type: string
          description: Email of the user
        first_name:
          type: string
          description: First name of the user
        last_name:
          type: string
          description: Last name of the user
        employee_code:
          type: string
          description: Employee code of the user
        role:
          type: string
          description: Role of the user in the application
    UserLoginModel:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: The user's username
        password:
          type: string
          description: The user's password
    UserModel:
        type: object
        properties:
            username:
                type: string
            password:
                type: string
            email:
                type: string
            first_name:
                type: string
            last_name:
                type: string
            employee_code:
                type: string
            role:
                type: string
    UserUpdateModel:
        type: object
        properties:
            updates:
                type: object
                additionalProperties:
                    type: string
    SuccessResponse:
        type: object
        properties:
            message:
                type: string
    ErrorResponse:
        type: object
        properties:
            message:
                type: string
    TokenModel:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: The user's token
swagger: '2.0'
info:
  title: Server Portal API documentation
  version: '1.0'
paths:
  /signup:
    get:
      description: Signup for a new user
      tags:
        - Users
      parameters:
        - in: query
          name: username
          type: string
          description: The username to find
      responses:
        200:
          description: User found
        404:
          description: User not found
    post:
      tags:
        - Users
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserCreateModel'
      responses:
        200:
          description: User created
        422:
          description: Invalid email
        423:
          description: Invalid password
        424:
          description: User already exists
  /signup/{id}:
    delete:
      tags:
        - Users
      parameters:
        - in: path
          name: id
          type: integer
          description: The ID of the user to delete
          required: true
      responses:
        200:
          description: User deleted
  /login:
     post:
      tags:
        - Users
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/UserLoginModel'
      responses:
        200:
            description: Successful login
            schema:
              type: object
              properties:
                access_token:
                  type: string
                  description: Access token for authentication
        401:
            description: Unauthorized
            schema:
              type: object
              properties:
                msg:
                  type: string
                  description: Error message
  /findUser:
    get:
      tags:
        - Users
      parameters:
        - in: query
          name: username
          type: string
          description: The username to find
      responses:
        200:
          description: User found
        404:
          description: User not found
  /allUsers:
    get:
      tags:
        - Users
      responses:
        200:
          description: All users retrieved

definitions:
    UserCreateModel:
      type: object
      required:
        - username
        - password
        - email
        - first_name
        - last_name
        - employee_code
        - role
      properties:
        username:
          type: string
          description: Username of the user
        password:
          type: string
          description: Password of the user
        email:
          type: string
          description: Email of the user
        first_name:
          type: string
          description: First name of the user
        last_name:
          type: string
          description: Last name of the user
        employee_code:
          type: string
          description: Employee code of the user
        role:
          type: string
          description: Role of the user in the application
    UserLoginModel:
      type: object
      required:
        - username
        - password
      properties:
        username:
          type: string
          description: The user's username
        password:
          type: string
          description: The user's password
    UserModel:
      type: object
      required:
        - username
        - token
      properties:
        username:
          type: string
          description: The user's username
        token:
          type: string
          description: The user's token
    TokenModel:
      type: object
      required:
        - token
      properties:
        token:
          type: string
          description: The user's token